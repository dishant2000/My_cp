 #include<iostream>
#include<vector>
#include<string>
#include<cstring>
#include<cmath>
#include<algorithm>
#include<unordered_map>
#include<unordered_set>
#include<set>
#include<map>
#include<sstream>
#include<stack>
#include<queue>
#include<climits>
using namespace std;

#define floop(i,L,R) for (int i = L; i < R; i++)
#define feloop(i,L,R) for (int i = L; i <= R; i++)
#define ffloop(i,L,R) for (int i = L; i > R; i--)
#define ffeloop(i,L,R) for (int i = L; i >= R; i--)
#define forEach(i,t) for (auto i=t.begin(); i!=t.end(); i++)
#define ALL(c) (c).begin(),(c).end()
#define pb push_back
#define dekh(d) cout<<d<<endl
#define dekh2(d) cout<<d<<" "
#define dekh3(d) cout<<d
typedef unsigned long long ull;
typedef long long ll;
typedef vector<int> vi;
typedef vector<vi> vvi;
typedef vector<ll> vll;
typedef long double ld;

bool solve(vi& v, int n, int mini){
   vi temp(n, 0);
   vi ex;
   floop(i, 0, n){
       if(v[i]%mini == 0){
           temp[i] = 1;
            ex.push_back(v[i]);
       }
   }
   sort(ex.begin(),ex.end());
   int j = 0 ;
   floop(i, 0 ,n){
       if(temp[i] == 1){
           v[i] = ex[j];
           j++;
       }
   }

   floop(i, 0, n -1 ){
       if(v[i]  > v[i + 1]) return false;
   }
   return true;
}

int main(){
    int t;
    cin>>t;
    while(t--){
        int n ;
        cin>>n;
        vi v(n);
        int mini = INT_MAX;
        floop(i, 0 ,n){ 
            cin>>v[i];
            if(v[i] < mini) mini = v[i];
        }
        bool res = solve(v, n , mini);
        if(res){
            cout<<"YES"<<endl;
        }
        else
        {
            cout<<"NO"<<endl;
        }
        
    }
}


