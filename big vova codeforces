#include<iostream>
#include<vector>
#include<string>
#include<cstring>
#include<cmath>
#include<algorithm>
#include<unordered_map>
#include<unordered_set>
#include<set>
#include<map>
#include<sstream>
#include<stack>
#include<queue>
#include<climits>
using namespace std;

#define floop(i,L,R) for (int i = L; i < R; i++)
#define feloop(i,L,R) for (int i = L; i <= R; i++)
#define ffloop(i,L,R) for (int i = L; i > R; i--)
#define ffeloop(i,L,R) for (int i = L; i >= R; i--)
#define forEach(i,t) for (auto i=t.begin(); i!=t.end(); i++)
#define ALL(c) (c).begin(),(c).end()
#define pb push_back
#define dekh(d) cout<<d<<endl
#define dekh2(d) cout<<d<<" "
#define dekh3(d) cout<<d
typedef unsigned long long ull;
typedef long long ll;
typedef vector<int> vi;
typedef vector<vi> vvi;
typedef vector<ll> vll;
typedef long double ld;


int main(){
  int t;
  cin>>t;
  while(t--){
      int n ;
      cin>>n;
      vi v(n);
      vi v1(n);
      floop(i , 0, n){
          cin>>v[i];
          v1[i] = v[i];
      }
      
     vi res;
     unordered_set<int> st;
     int k = 0 ;
     while(k < n){
         int maxi = INT_MIN;
         int idx;
         floop(i, 0 ,n){
             if(st.find(i) == st.end() && v1[i] > maxi){ 
                maxi = v1[i];
                idx = i;
             } 
         }

        st.insert(idx);
        res.push_back(v[idx]);
        floop(i ,0,n){
            if(st.find(i) == st.end()){
                v1[i]  = __gcd(v1[i], maxi);
            }
        }
        k++;
     }
     floop(i, 0, n){
         cout<<res[i]<<" ";
     }
     cout<<endl;
  }
}
