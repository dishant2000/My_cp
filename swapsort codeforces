#include<iostream>
#include<vector>
#include<string>
#include<cstdio>
#include<cstring>
#include<cmath>
#include<algorithm>
#include<unordered_map>
#include<unordered_set>
#include<set>
#include<map>
#include<sstream>
#include<stack>
#include<queue>
#include<climits>
using namespace std;

#define floop(i,L,R) for (int i = L; i < R; i++)
#define feloop(i,L,R) for (int i = L; i <= R; i++)
#define ffloop(i,L,R) for (int i = L; i > R; i--)
#define ffeloop(i,L,R) for (int i = L; i >= R; i--)
#define forEach(i,t) for (auto i=t.begin(); i!=t.end(); i++)
#define ALL(c) (c).begin(),(c).end()
#define pb push_back
#define dekh(d) cout<<d<<endl
#define dekh2(d) cout<<d<<" "
#define dekh3(d) cout<<d
typedef unsigned long long ull;
typedef long long ll;
typedef vector<int> vi;
typedef vector<vi> vvi;
typedef vector<ll> vll;
typedef long double ld;
#define wall 1000000000

int res = 0;
vector<pair<int , int >> re;


int main() {
ios_base::sync_with_stdio(false);
cin.tie(NULL);
    int  n;
    cin>>n;
    vi v(n);
    floop(i , 0 , n ) cin>>v[i];
    vector<pair<int , int > > re;

    floop(i , 0, n){

        int j = i ; 
        floop(k , i , n){
            if(v[k] < v[j]) j = k;
        }
        if(j != i ){
            swap(v[i], v[j]);
            re.push_back(make_pair(i , j));
        }

    }
     cout<<re.size()<<endl;
     forEach(x , re){
         cout<<x->first<<" "<<x->second<<endl;
     }
   
}
