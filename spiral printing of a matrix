#include<iostream>
#include<vector>
#include<string>
#include<cstring>
#include<cmath>
#include<algorithm>
#include<unordered_map>
#include<unordered_set>
#include<set>
#include<map>
#include<sstream>
#include<stack>
#include<queue>
#include<climits>
using namespace std;

#define floop(i,L,R) for (int i = L; i < R; i++)
#define feloop(i,L,R) for (int i = L; i <= R; i++)
#define ffloop(i,L,R) for (int i = L; i > R; i--)
#define ffeloop(i,L,R) for (int i = L; i >= R; i--)
#define forEach(i,t) for (auto i=t.begin(); i!=t.end(); i++)
#define ALL(c) (c).begin(),(c).end()
#define pb push_back
#define dekh(d) cout<<d<<endl
#define dekh2(d) cout<<d<<" "
#define dekh3(d) cout<<d
typedef unsigned long long ull;
typedef long long ll;
typedef vector<int> vi;
typedef vector<vi> vvi;
typedef vector<ll> vll;
typedef long double ld;


int main(){
   int n , m;
   cin>>n>>m;
   vvi v(n,vi(m));
   floop(i, 0 , n)
    floop(j , 0, m)
        cin>>v[i][j];

   vi res;
   int dir = 0;
   int l = 0 , r = m - 1;
   int t = 0 , b = n - 1;

   while(l <= r && t <= b){
       if(dir == 0 ){
           for(int  i = l ; i <= r ; i++){
               res.push_back(v[t][i]);
           }
           t++;
           dir++;
       }
       else if(dir == 1){
           for(int i = t; i <= b ;i++){
               res.push_back(v[i][r]);
           }
           dir++;
           r--;
       }
       else if(dir == 2 ){
           for(int i = r; i >= l; i--){
               res.push_back(v[b][i]);
           }
           b--;
           dir++;
       }
       else if(dir ==  3){
           for(int i = b ; i >= t; i--){
               res.push_back(v[i][l]);
           }
           dir = 0;
           l++;

       }
   }

   floop(i , 0, res.size()){
       cout<<res[i]<<" ";
   }
   cout<<endl;

}
